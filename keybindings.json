// Place your key bindings in this file to overwrite the defaults
[
    // emacs
    {
        "key": "ctrl+x j",
        "command": "workbench.action.gotoLine",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+oem_2",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly" 
    },
    {
        "key": "ctrl+x p",
        "command": "workbench.action.previousEditor",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.terminal.clearSelection",
        "when": "terminalFocus && terminalTextSelected && !terminalFindWidgetVisible"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.terminal.hideFindWidget",
        "when": "terminalFindWidgetVisible && terminalFocus"
    },
    {
        "key": "ctrl+oem_3",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+x t",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    // emacs mark mode
    {
        "key": "ctrl+space",
        "command": "-emacs.enterMarkMode",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+oem_3",
        "command": "emacs.enterMarkMode",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+[BracketLeft]",
        "command": "emacs.enterMarkMode",
        "when": "editorTextFocus"
    },
    // Paste clipboad
    {
        "key": "ctrl-v",
        "command": "editor.action.clipboardPasteAction",
        "when": "textInputFocus && !editorReadonly"
    },
    // Suggest
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetVisible"
    },
    // Find
    {
        "key": "ctrl+v",
        "command": "-closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+a",
        "command": "-closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    // Go out of definition
    {
        "key": "f11",
        "command": "workbench.action.navigateBack",
    },
    // Command palet
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.showCommands"
    },
    // Skip by word
    {
        "key": "ctrl+left",
        "command": "cursorWordEndLeft",
        "when": "textInputFocus",
    },
    {
        "key": "ctrl+right",
        "command": "cursorWordStartRight",
        "when": "textInputFocus",
    },
    // Select by word
    {
        "key": "ctrl+shift+left",
        "command": "cursorWordPartLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "cursorWordPartRightSelect",
        "when": "textInputFocus"
    },
    // Toggle focus of terminal
    {
        "key": "ctrl+;",
        "command": "workbench.action.terminal.focus",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+;",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "terminalFocus"
    },
    // Replace
    {
        "key": "ctrl+h",
        "command": "-deleteLeft",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+h",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorTextFocus && !editorReadonly"
    },
]
